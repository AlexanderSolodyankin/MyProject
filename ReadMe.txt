
===============================Описание Приложения============================================================
Приложения для автолюбителей а так же всего что с ним связанно: это покупка и продажа машин, реклама сервисных центров
новостные ленты, рекламмы и предложения от специалистов(индевидуальные спецы к примеру сварщик),
список вакансий а так же спрос на специалистов, список запчастей и комплектующих к машине,
отзывы об сервесных центрах или индевидуальных спецов, рейтинг водителей а так же форумы.
***************************************************************************************************************

===================================Что реалезованно============================================================
Реалезован юзер его регистрация, вывод всех Юзеров, удоление Юзера, авторизация Юзера

Реалезован Роль и ее регистрация а так же изночальное привязывание Роли пользователя к UserEntity

Создана персона

****************************************************************************************************************

=====================================Что нужно сделать============================================================
Нужно реалезовать смену пароля у Юзера

Нужно сделать Изменение роли у пользователя

Реалезовать КРУД методы для персоны

Специалисты, СервисЦентры, форум, лайки, письма, Новости, Посты.

*******************************************************************************************************************

=========================================Скрип из Базы данных====================================================
CREATE TABLE public.user_entity (
	id int8 NOT NULL,
	create_date timestamp NULL,
	email varchar(255) NULL,
	login varchar(255) NULL,
	"password" varchar(255) NULL,
	CONSTRAINT uk_1dnnlrof07tq8gn7s3om9bhao UNIQUE (login),
	CONSTRAINT user_entity_pkey PRIMARY KEY (id)
);

CREATE TABLE public.user_role (
	id int8 NOT NULL,
	user_role varchar(255) NULL,
	user_id int8 NULL,
	CONSTRAINT user_role_pkey PRIMARY KEY (id),
	CONSTRAINT fk79ltvrbu1ni2ad7w7i9vers1k FOREIGN KEY (user_id) REFERENCES public.user_entity(id)
);

CREATE TABLE public.person (
	id int8 NOT NULL,
	car varchar(255) NULL,
	city varchar(255) NULL,
	country varchar(255) NULL,
	gender bool NOT NULL,
	name varchar(255) NULL,
	patronymic varchar(255) NULL,
	phone varchar(255) NULL,
	ser_name varchar(255) NULL,
	user_id int8 NULL,
	CONSTRAINT person_pkey PRIMARY KEY (id),
	CONSTRAINT fkppka9doohe52u0agfq54y4nnc FOREIGN KEY (user_id) REFERENCES public.user_entity(id)
);

*****************************************************************************************************************




===================================Идеи для проекта==============================================================
Попробывать создать Второе приложение для фронтенда на Spring MVC и реалезовать там фронт часть с JSON запросами

*****************************************************************************************************************





==========================================JSON Запросы======================================================

Регистрация персоны_____________________________
{
    "name": "Alex",
    "serName": "Solo",
    "patronymic": "Vladim",
    "phone": "+9965655",
    "country": "Kygiz",
    "city":"Bish",
    "car": "BMW",
    "gender":true,
    "userEntity":{
        "login":"SolRa",
        "password": "qwerty",
        "email":"@mail.ru"
    }
}
___________________________________________________
***********************************************************************************************************************

======================================Вопросы для реалезации проекта=======================================================

 нужно ли постоянно добовлять строчки по Спринг Секьюрити классу в методе ".antMatvhers"
---------------------------------------------------------------------------------



**********************************************************************************************************************

Пользователь регистрируется (JSON) -> (User) -> (Controller) -> (DataBase) -> (Controller) -> (User) -> (JSON)./

Внос данных о пользователе (JSON) -> (UserInfo) -> (Controller){ UserInfo.getUser() -> (repository) ->
-> (UserEntity) -> (UserInfo.setUser()} -> (DataBase) -> (Controler) -> (JSON)./

Регистрация Сервис Центра (JSON) -> (ServisCenter) -> (Controller){ ServisCenter.getUser() -> (Repository) ->
-> (UserEntity) -> (ServicCenter.setUser())} -> (DataBase) -> Controller -> (JSON)./

Такой же метод регистрации и специалиста ___^ ./

Создание поста(новости - события) завязана на пользователе и событие может показывать как рекламу и сервис центра и
так же какое то событие которое происходит у пользователя. ( если это реклама сервис центра то со стороны фронта
получаем сервис центр от пользователя) (Или создам отдельное событие в типе рекламы)
Так же вывод рекламы и специалиста.





=====================================================================================================================
При заходе на страницу пользователь будет видеть главную страницу с выводом постов или рекламмы
 (событий которые происходят  на сайте) для этого регистрация не нужно тупо нужно для того чтобы не выводилась пустая
 страница. при регистрации юзер будет вводить логин который он хотел бы зарегать и информацию о себе типа имени и возроста.
 после регистрации пользователь сможет зарегестрировать свой сервис центр если он у него есть, так же сможет для себя
 добовлять свои специализации (Сварщик, моторист, и другие) и закриплять на юзере и операясь от специльности сможет предлогать
 свои услуги. И эти самые рекламы или самые активные форумы будут выводится в новостной ленте. Если за юзером будут закреплены
 сервис или специальность будут выводится в ленте информация по тематике ( Нужен сварщик на развал схождение или допустим
 форум на котором идет обсуждение какой сервис выбрать что бы пользователь смог прорекламировать свой сервис центер).

 Месенджер:
 Хочу реалезовать в качестве класса меседж в котором будет хронится инфа о польхователе и его текст.
 далее реалезовать ее на форумах или в личных чатах так же меседж будет отпровлятся просто в качестве письма на почтовый ящик.


